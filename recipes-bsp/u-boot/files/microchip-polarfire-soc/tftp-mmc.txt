# This is the default MMC and TFTP u-boot boot script
# The order is as follows:
#  1. QSPI load a fitImage
#  2. MMC load a fitImage
#  3. TFTP boot a fitImage
#  4. TFTP boot a uImage

setenv fdt_high 0xffffffffffffffff
setenv initrd_high 0xffffffffffffffff

if test -n ${mtd_present}; then
  ubi part rootfs
  ubifsmount ubi0:rootfs
  ubifsload 0x80000000 boot/fitImage
  ubifsumount
  ubi detach
fi;

if test "${$?}" -eq 0; then
  cp 0x80000000 ${scriptaddr} ${filesize}
  setenv base_args "earlycon=sbi uio_pdrv_genirq.of_id=generic-uio"
  setenv mtd_type "@MTDTYPE@"
  setenv bootargs "${base_args} ubi.mtd=2 root=ubi0:rootfs rootfstype=ubifs rootwait rw mtdparts=@MTDPARTS@"
else
  load mmc 0:${distro_bootpart} ${scriptaddr} fitImage
fi;

if test -n ${mtd_present}; then
  if test "${mtd_type}" = "nor"; then
    bootm start ${scriptaddr}#conf-microchip_mpfs-icicle-kit.dtb#conf-mpfs_icicle_pmod_sf3.dtbo
  elif test "${mtd_type}" = "nand"; then
    bootm start ${scriptaddr}#conf-microchip_mpfs-icicle-kit.dtb#conf-mpfs_icicle_flash5_click.dtbo
  else
    bootm start ${scriptaddr};
  fi;
else
  bootm start ${scriptaddr};
fi;

bootm loados ${scriptaddr};
# Try to load a ramdisk if available inside fitImage
bootm ramdisk;
bootm prep;
fdt set /soc/ethernet@20112000 mac-address ${icicle_mac_addr0};
fdt set /soc/ethernet@20110000 mac-address ${icicle_mac_addr1};
run design_overlays
bootm go;

# Setup the DHCP for a TFTP boot
setenv serverip @SERVERIP@
dhcp

# Fallback to a TFTP fitImage
# Try to boot a fitImage from the TFTP server
if tftpboot ${scriptaddr} fitImage; then
 bootm start ${scriptaddr};
 bootm loados ${scriptaddr};
 # Try to load a ramdisk if available inside fitImage
 bootm ramdisk;
 bootm prep;
 fdt set /soc/ethernet@20112000 mac-address ${icicle_mac_addr0};
 fdt set /soc/ethernet@20110000 mac-address ${icicle_mac_addr1};
 run design_overlays
 bootm go;
fi;


# Fallback to a TFTP uImage
if tftpboot ${kernel_addr_r} uImage; then
  bootm ${kernel_addr_r} - ${fdt_addr_r}
fi;
